include node_modules/respoke-style/templates/mixins


// Copyright 2014, Digium, Inc.
// All rights reserved.
//
// This source code is licensed under The MIT License found in the
// LICENSE file in the root directory of this source tree.
//
// For all details and documentation:  https://www.respoke.io
- var subTitle = comments[0].ctx.file.input;
- var title = className;
- var publicComments = [];
- var publicEvents = [];
- var classComment = null;
- var link = subTitle + '.html';
- var getEventId = function (name) { return "event-" + name.replace('.','-').replace('#','-'); };
- var getEventName = function (name) { return name.split('#')[1]; };
- var allClasses = Object.keys(structure).sort();
- var mapFireEvents = function (f) { return '"' + f.replace(className + '#','') + '"'; };
- var alreadyListedEvents = [];
- var cleanClassName = function (name) { return name.replace('respoke.', ''); };
- var github = "https://github.com/respoke/respoke/blob/master/";
- var visibleProps = ['method', 'property', 'function', 'declaration', 'event'];
- var isDeclaration = function (prop) { return prop !== "className" };
- var shouldBeVisible = function (cmt) {
-     return !cmt.isPrivate && !cmt.ignore && cmt.ctx && visibleProps.indexOf(cmt.ctx.type) !== -1 && isDeclaration(cmt.ctx.name);
- };

each comment in comments
  if shouldBeVisible(comment)
    - comment.methodParams = [];
    - comment.argumentArray = [];
    - comment.eventPropertyArray = [];
    each tag in comment.tags

      if (tag.type === "param")
        - var tagParamName = tag.name;//.replace('[','').replace(']','');
        - comment.methodParams.push({   name: tagParamName,   type: tag.types.join(', '),   desc: tag.description.replace('- ','')  });
        - if (tagParamName.indexOf('.') === -1 && tagParamName.indexOf('[') === -1) comment.argumentArray.push(tagParamName);

      else if (tag.type === "property")
        - var tagParamName = tag.name.replace('[','').replace(']','');
        - comment.eventPropertyArray.push({   name: tagParamName,   type: tag.types[0],   desc: tag.description.replace('- ','')  });

      else if (tag.type === "type")
        - comment.type = tag.types.join('|');
      else if ( (tag.type === "returns" || tag.type === "return") && tag.string)
        - var returnStringArray = tag.string.split( /\{|\}/g );
        - if (!returnStringArray[0]) returnStringArray.shift();
        - comment.returns = returnStringArray[0];
      else if (tag.type === "augments" && tag.otherClass)
        - comment.augments = tag.otherClass
      else if (tag.type === "auth")
        - comment.auth = tag.string.split(', ')

    - if (comment.ctx.name == className) classComment = comment;
    - else if (comment.ctx.type === 'event')
        //- Some events are commented multiple times in the source.
        - if (alreadyListedEvents.indexOf(comment.ctx.name) !== -1)
            - continue;
        - alreadyListedEvents.push(comment.ctx.name);
        - publicEvents.push(comment);
    - else
      - if (comment.ctx.receiver && comment.ctx.receiver.indexOf('.') !== -1)
        - var commentPrefix = comment.ctx.receiver.split('.');
        - commentPrefix.shift()
        - comment.ctx.name = commentPrefix.join('.') + '.' + comment.ctx.name;
      - publicComments.push(comment);

- publicComments.unshift(classComment);


//- Sidebar

mixin menu()
    ul.menu
        li
            a(href="/") &larr; Docs
            br
            br
            | Full Respoke.js Browser API
            
        each otherClass in allClasses, otherClassName
            if (otherClass === className)
                li.menu--header
                    a(href=otherClass + '.html')= cleanClassName(otherClass)
                    ul.menu--nested
                        if (publicComments.length)
                            li.menu--header
                                a(href="#") Properties and Methods
                                ul.menu--nested
                                    each comment, indx in publicComments
                                        if (indx !== 0)
                                            li: a(href='#' + comment.ctx.name.replace('.','-'))
                                                = comment.ctx.name
                        if (publicEvents.length)
                            li.menu--header
                                a(href="#") Events
                                ul.menu--nested
                                    each comment, indx in publicEvents
                                        li: a(href='#' + getEventId(comment.ctx.name))
                                            = getEventName(comment.ctx.name)
            else
                li: a(href=otherClass + '.html')= cleanClassName(otherClass)
                
mixin menuItem(node)
    - var itemClasses = [];

    - if (currentPath === node.path || onLandingPage) itemClasses.push('menu--current-item');
    - if (node.children.length > 0) itemClasses.push('menu--header');




doctype html
html
    head
        block head
            title=subTitle + " - " + title
            include node_modules/respoke-style/templates/head
            meta(name="keywords" content="respoke, webrtc, pubsub, audio video calling")
            meta(name="description" content="Respoke.js docs for " + subTitle)
            link(rel="canonical" href="https://docs.respoke.io/js-library/#{link}")
            link(rel="stylesheet" type="text/css" href="css/docs.css")
    body
    
        +navbar('dark')
            +menu()
        
        
        .container.navbar--push-it
            nav.sidebar
                +menu()
            
            
            article.content: block content
                h1= title
                a(href=github + subTitle)= "from " + subTitle

                
                //- Properties and methods
                each comment, indx in publicComments
                    section(id=comment.ctx.name.replace('.','-'))
                        br
                        br
                        
                        
                        //- Special treatment of the first item. It's the class name.
                        if (indx === 0)
                            if (comment.augments)
                                h3 Extends
                                a(href=comment.augments + ".html")= comment.augments

                        else if (comment.ctx.type === "property")
                            //- the title of the method or prop
                            h2
                                a(href="#"+comment.ctx.name)= comment.ctx.name
                            
                            h3 Type
                            code= comment.type
                        else
                            h2: a(href="#"+comment.ctx.name)
                                = comment.ctx.name + "(" + comment.argumentArray.join(', ') + ")"

                        
                        //- Description
                        if (comment.description.summary)
                            h3 Description
                            div!= comment.description.summary
                        
                        
                        //- Usage
                        if (comment.description.body)
                            h3 Usage
                            div!= comment.description.body
                        
                        
                        //- Returns
                        if (indx !== 0 && comment.returns)
                            h3 Returns
                            code= comment.returns
                        
                        
                        //- Fires
                        if (comment.fires && comment.fires.length)
                            h3 Fires
                            code= comment.fires.map(mapFireEvents).join('|')
                        
                        
                        //- Arguments
                        if (indx !== 0 && comment.methodParams.length)
                            h3 Arguments
                            table
                                tr
                                    th Name
                                    th Type
                                    th Description

                                each param in comment.methodParams
                                    tr
                                        td: code= param.name.replace('[', '').replace(']', '')
                                        td= param.type
                                        td= param.desc
                         
                         
                         
                         //- put a header at the end of the class declaration
                         if (indx === 0)
                             h2 Properties and Methods

                //- Events
                if (publicEvents.length)
                    br
                    br
                    br
                    br
                    br
                    br
                    h1 Events
                    
                    each comment, indx in publicEvents
                        - var eventLinkId = getEventId(comment.ctx.name);

                        section(id=eventLinkId)
                            br
                            h2: a(href="#" + eventLinkId)= getEventName(comment.ctx.name)
                            h6: code= comment.ctx.type
                            
                            h3 Description
                            div!= comment.description.full

                            if (comment.eventPropertyArray.length)
                                h3 Event Callback Arguments

                                table
                                    tr
                                        th Name
                                        th Type
                                        th Description

                                    each param in comment.eventPropertyArray
                                        tr
                                            td: code= 'evt.' + param.name
                                            td: strong= param.type
                                            td= param.desc


        include node_modules/respoke-style/templates/footer
